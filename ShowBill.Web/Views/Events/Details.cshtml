@using ShowBill.Models;
@using ShowBill.Web.Models.EventModels;
@using System.Globalization;
@using Microsoft.Extensions.Configuration;
@inject IConfiguration Configuration
@model ShowBill.Web.Models.EventModels.EventViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    string ApiUrl = "https://maps.googleapis.com/maps/api/js?key="
      + Configuration["GoogleMapsKey"]
      + "&callback=initMap";
}

<div class="jumbotron unset-paddings">
    <div>
        <hr />
        <partial name="PhotosCarousel" for="Photos"/>
        <div class="container inline-content">
            <div class="row">
                <div class="col-xs-12">
                    <h2> @Html.DisplayFor(model => model.Title) </h2>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12">
                    <p>@Html.DisplayFor(model => model.Descriprion)</p>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-2">
                    <b>@Html.DisplayNameFor(model => model.Place)</b>
                </div>
                <div class="col-xs-6 inline-content">
                    <div> @Html.DisplayFor(model => model.Place.Name) </div>
                    <div id="map" class="details-map"></div>
                </div>
            </div>
            @if (Model.Cost != null || Model.Cost != 0)
            {
                <div class="row">
                    <div class="col-xs-2">
                        <b>@Html.DisplayNameFor(model => model.Cost)</b>
                    </div>
                    <div class="col-xs-6 inline-content">
                        @Html.DisplayFor(model => model.Cost) $
                    </div>
                </div>
            }
            <div class="row">
                <div class="col-xs-2">
                    <b>@Html.DisplayNameFor(model => model.Date)</b>
                </div>
                <div class="col-xs-6 inline-content">
                    @Html.DisplayFor(model => model.Date)
                </div>
            </div>
            @if (Model.Seanses.Any())
            {
                <div class="row">
                    <div class="col-xs-2">
                        <b>@Html.DisplayNameFor(model => model.Seanses)</b>
                    </div>
                    <div class="col-xs-6 inline-content">
                        @foreach (var seanse in Model.Seanses)
                        {
                            <div>
                                @seanse
                            </div>
                        }
                    </div>
                </div>
            }
            @switch (Model.Type)
            {
                case EventType.Concert:
                    {
                        <partial name=".\PartialDetails\ArtistsEventDetails" model='(Model as ArtistsEventViewModel)' />
                        break;
                    };
                case EventType.Exhibition:
                    {
                        <partial name=".\PartialDetails\ArtistsEventDetails" model='(Model as ArtistsEventViewModel)' />
                        break;
                    };
                case EventType.Performance:
                    {
                        <partial name=".\PartialDetails\PerformanceDetails" model='(Model as PerformanceViewModel)' />
                        break;
                    };
                case EventType.Movie:
                    {
                        <partial name=".\PartialDetails\MovieDetails" model='(Model as MovieViewModel)' />
                        break;
                    };
                default: { break; };
            }
        </div>
    </div>
</div>
@section scripts
    {
    <script>
        function initMap() {
            const position = { lat: @Model.Place.Latitude.ToString(new CultureInfo("en-US")), lng: @Model.Place.Longitude.ToString(new CultureInfo("en-US"))};
            initDetailsMap(position);
        };
    </script>
    <script src="/js/map.js"></script>
    <script async defer src=@ApiUrl></script>
}

